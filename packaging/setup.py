"""
This is a setup.py script generated by py2applet

Usage (OS X):
    python setup.py py2app

Usage (Windows):
    python setup.py py2exe
    

Edits by Pauli
"""

import sys
import os
import subprocess

# Common info
APP = 'siren.py'
NAME="python-siren"
SHORT_NAME="Siren"
VERSION = '2.1.0'
DESCRIPTION="Interactive Redescription Mining"
AUTHOR="Esther Galbrun and Pauli Miettinen"
AUTHOR_EMAIL="galbrun@cs.helsinki.fi"
URL="http://www.cs.helsinki.fi/u/galbrun/redescriptors/siren/"
LICENSE="Apache_2.0"

########## DISTUTILS FILES
DU_RESOURCES_SIREN=['icons/*', 'help/*', 'commons/*', 'screenshots/*', 'ABOUT', 'LICENSE',
              'ui_confdef.xml']
DU_RESOURCES_REREMI=['miner_confdef.xml', 'inout_confdef.xml']
DU_RESOURCES_GRAKO=[]
DU_FILES = [] ## ['siren', 'findFiles', 'DataWrapper', 'classGridTable', 'classMapView', 'classPreferencesDialog', 'classSiren','miscDialogs']
DU_PACKAGES = ['siren', 'siren.reremi', 'siren.reremi.grako']

extra_options = dict(
    name=NAME,
    version=VERSION,
    description=(DESCRIPTION),
    author=AUTHOR,
    author_email=AUTHOR_EMAIL,
    url=URL,
    license=LICENSE,
    )

# Get SVN revision -- works w/o awk/grep/sed
svn_revision = '-1'
# try:
#     p = subprocess.check_output(['svn', 'info'])
# except (subprocess.CalledProcessError, OSError):
#     print "No SVN found, using default svn revision (-1) instead"
# else:
#     for line in p.splitlines():
#         l = line.split()
#         if l[0] == 'Revision:':
#             svn_revision = l[1]
#             break


if sys.platform == 'darwin' or sys.platform == 'win32':
    print "Use the other setup, inside siren folder"

else:
    ################ LINUX SETUP
    from distutils.core import setup

    extra_options.update(dict(
        packages=DU_PACKAGES,
        py_modules=DU_FILES,
        package_data={'siren': DU_RESOURCES_SIREN,
                      'siren.reremi': DU_RESOURCES_REREMI,
                      'siren.reremi.grako': DU_RESOURCES_GRAKO},
        ))
    # Run setup
    setup(**extra_options)

