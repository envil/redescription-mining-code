"""
This is a setup.py script generated by py2applet

Usage (OS X):
    python setup.py py2app

Usage (Windows):
    python setup.py py2exe
    

Edits by Pauli
"""

import sys
import os
import subprocess

# Common info
APP = 'siren.py'
NAME="python-siren"
SHORT_NAME="Siren"
VERSION = '2.0.1'
DESCRIPTION="Interactive Redescription Mining"
AUTHOR="Esther Galbrun and Pauli Miettinen"
AUTHOR_EMAIL="galbrun@cs.helsinki.fi"
URL="http://www.cs.helsinki.fi/u/galbrun/redescriptors/siren/"
LICENSE="Apache_2.0"

########## SETUPTOOLS FILES
## ST_RESOURCES=['help',
##               'commons/siren.css',
##               'commons/siren_icon.png',
##               'commons/top_tools.jpg',
##               'commons/bottom_map.jpg',
##               'commons/both_windows_comm.png',
##               'icons/siren_icon32x32.png', 'ABOUT', 'LICENSE', 'LICENSE_short',
##               'ui_confdef.xml', 'reremi/miner_confdef.xml', 'reremi/inout_confdef.xml']
ST_RESOURCES=['help', 'commons', 'screenshots', 'ABOUT', 'LICENSE',
              'ui_confdef.xml', 'reremi/miner_confdef.xml', 'reremi/inout_confdef.xml']
# N.B. You must include the icon files later
ST_FILES = ['classConnectionDialog.py',
            'classEProjView.py',
            'classGridTable.py',
            'classGView.py',
            'classInterObjects.py',
            'classMapView.py',
            'classParaView.py',
            'classPreferencesDialog.py',
            'classProj.py',
            'classSiren.py',
            'classVProjView.py',
            'classWorkClient.py',
            'classWorkInactive.py',
            'classWorkLocal.py',
            'classWorkServer.py',
            'DataWrapper.py',
            'factView.py',
            'miscDialogs.py',
            'siren.py',
            'toolMath.py',
            'toolWP.py',
            'tsne.py']
# ST_FILES = ['DataWrapper.py', 'classGridTable.py', 'classMapView.py',
#             'classPreferencesDialog.py', 'classSiren.py', 'miscDialogs.py']
ST_MORE_FILES=['ez_setup.py']
# ST_PACKAGES = ['wx', 'mpl_toolkits', 'reremi']
ST_PACKAGES = ['wx', 'reremi', 'sklearn', 'mpl_toolkits']
MATPLOTLIB_BACKENDS = ['wxagg']

########## DISTUTILS FILES
DU_RESOURCES_SIREN=['help/*',
                    'commons/siren.css',
                    'commons/siren_icon.png',
                    'commons/top_tools.jpg',
                    'commons/bottom_map.jpg',
                    'commons/both_windows_comm.png',
                    'icons/siren_icon32x32.png',
                    'ABOUT', 'LICENSE', 'LICENSE_*',
                    'ui_confdef.xml']
DU_RESOURCES_REREMI=['miner_confdef.xml', 'inout_confdef.xml']
DU_FILES = [] ## ['siren', 'findFiles', 'DataWrapper', 'classGridTable', 'classMapView', 'classPreferencesDialog', 'classSiren','miscDialogs']
DU_PACKAGES = ['siren', 'siren.reremi']

extra_options = dict(
    name=NAME,
    version=VERSION,
    description=(DESCRIPTION),
    author=AUTHOR,
    author_email=AUTHOR_EMAIL,
    url=URL,
    license=LICENSE,
    )

# Get SVN revision -- works w/o awk/grep/sed
svn_revision = '-1'
# try:
#     p = subprocess.check_output(['svn', 'info'])
# except (subprocess.CalledProcessError, OSError):
#     print "No SVN found, using default svn revision (-1) instead"
# else:
#     for line in p.splitlines():
#         l = line.split()
#         if l[0] == 'Revision:':
#             svn_revision = l[1]
#             break


if sys.platform == 'darwin' or sys.platform == 'win32':
    print "Use the other setup, inside siren folder"

else:
    ################ LINUX SETUP
    from distutils.core import setup

    extra_options.update(dict(
        packages=DU_PACKAGES,
        py_modules=DU_FILES,
        package_data={'siren': DU_RESOURCES_SIREN,
                      'siren.reremi': DU_RESOURCES_REREMI},
        ))
    # Run setup
    setup(**extra_options)

